package com.myweb.www.controller;

import javax.inject.Inject;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;

import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;

import com.myweb.www.domain.MemberVO;
import com.myweb.www.service.MemberService;

import lombok.extern.slf4j.Slf4j;

@Slf4j
@Controller
@RequestMapping("/mem/*")
public class MemberContorller {

	@Inject
	private MemberService msv;

	@RequestMapping("/login")
	public String login() {
		return "member/login";
	}

	@GetMapping("/signup")
	public String signUpForm(Model model) {
		log.info(">>>>> 회원가입 페이지 접근 >>>>>");
		model.addAttribute("memberVO", new MemberVO());
		return "member/signup";
	}

	@PostMapping("/signup")
	public String signUp(Model m, MemberVO memberVO) {
		log.info(">>>>> 회원가입 처리 중 >>>>>: {}", memberVO.toString());
		int isOk = msv.signup(memberVO);

		// "isOk" 값을 기반으로 필요한 로직 추가

		return "redirect:/"; // 로그인 페이지로 리디렉션
	}

	@PostMapping("/login")
	public String loginPost(Model model, String id, String pw, HttpServletRequest request) {
		log.info("ID / PW >>>>> {}: {}", id, pw);
		MemberVO isMem = msv.isMem(id, pw);
		if (isMem != null) {
			HttpSession session = request.getSession();
			session.setAttribute("ses", isMem);
			return "redirect:/"; // 로그인 성공 시, 홈 페이지로 리다이렉션
		} else {
			model.addAttribute("msg_login", "0"); // 로그인 실패 시, 메시지를 모델에 추가
			return "member/login"; // 로그인 페이지로 다시 이동
		}
	}

	@GetMapping("/logout")
	public String logout(Model m, HttpServletRequest req) {
		req.getSession().removeAttribute("ses");
		req.getSession().invalidate();
		m.addAttribute("msg_logout", 1);
		return "home";
	}

}
